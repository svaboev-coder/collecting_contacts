#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
"""

import os
import sys
import subprocess
import webbrowser
import time
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import fastapi
        import uvicorn
        import openai
        import requests
        import bs4
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r backend/requirements.txt")
        return False

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ .env"""
    env_file = Path(".env")
    if not env_file.exists():
        print("‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º OpenAI API –∫–ª—é—á–æ–º:")
        print("OPENAI_API_KEY=your_api_key_here")
        return False
    
    with open(env_file, 'r') as f:
        content = f.read()
        if 'your_openai_api_key_here' in content:
            print("‚ö†Ô∏è –ó–∞–º–µ–Ω–∏—Ç–µ placeholder –≤ .env –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á")
            return False
    
    print("‚úÖ –§–∞–π–ª .env –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    return True

def start_backend():
    """–ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥...")
    
    backend_dir = Path("backend")
    if not backend_dir.exists():
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞
    try:
        process = subprocess.Popen(
            [sys.executable, "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"],
            cwd=backend_dir,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω
        if process.poll() is None:
            print("‚úÖ –ë—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
            return process
        else:
            stdout, stderr = process.communicate()
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞: {stderr.decode()}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞: {e}")
        return False

def start_frontend():
    """–ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    print("üåê –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥...")
    
    frontend_dir = Path("frontend")
    if not frontend_dir.exists():
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ HTTP —Å–µ—Ä–≤–µ—Ä–∞
    try:
        process = subprocess.Popen(
            [sys.executable, "-m", "http.server", "80"],
            cwd=frontend_dir,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        time.sleep(2)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω
        if process.poll() is None:
            print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost")
            return process
        else:
            stdout, stderr = process.communicate()
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {stderr.decode()}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {e}")
        return False

def open_browser():
    """–û—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞"""
    print("üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
    try:
        webbrowser.open("http://localhost")
        print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä: {e}")
        print("–û—Ç–∫—Ä–æ–π—Ç–µ –≤—Ä—É—á–Ω—É—é: http://localhost")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üè® –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è '–ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–µ–ª–µ–π' –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    if not check_dependencies():
        return
    
    if not check_env_file():
        return
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    backend_process = start_backend()
    if not backend_process:
        return
    
    frontend_process = start_frontend()
    if not frontend_process:
        backend_process.terminate()
        return
    
    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        open_browser()
        
        print("\nüéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")
        print("üì± –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost")
        print("üîß –ë—ç–∫–µ–Ω–¥: http://localhost:8000")
        print("üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
        print("\n‚èπÔ∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        while True:
            time.sleep(1)
            
    except KeyboardInterrupt:
        print("\n\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
        
        if backend_process:
            backend_process.terminate()
            print("‚úÖ –ë—ç–∫–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        if frontend_process:
            frontend_process.terminate()
            print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        print("üëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

if __name__ == "__main__":
    main()
