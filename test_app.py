#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è "–ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–µ–ª–µ–π"
"""

import requests
import json
import time

def test_health_endpoint():
    """–¢–µ—Å—Ç endpoint'–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    try:
        response = requests.get("http://localhost:8000/health")
        print(f"‚úÖ Health check: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   –°—Ç–∞—Ç—É—Å: {data.get('status')}")
            print(f"   –°–µ—Ä–≤–∏—Å: {data.get('service')}")
        return True
    except Exception as e:
        print(f"‚ùå Health check failed: {e}")
        return False

def test_collect_contacts(location="–°–æ—á–∏"):
    """–¢–µ—Å—Ç —Å–±–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    try:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –¥–ª—è: {location}")
        
        payload = {"location": location}
        response = requests.post(
            "http://localhost:8000/collect-contacts",
            json=payload,
            timeout=120  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º timeout –¥–ª—è –¥–æ–ª–≥–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        )
        
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–æ–≤: {len(data.get('logs', []))}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {len(data.get('contacts', []))}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
            print("\nüìã –õ–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
            for i, log in enumerate(data.get('logs', [])[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –ª–æ–≥–æ–≤
                print(f"   {i+1}. {log}")
            
            if len(data.get('logs', [])) > 5:
                print(f"   ... –∏ –µ—â–µ {len(data.get('logs', [])) - 5} –ª–æ–≥–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
            contacts = data.get('contacts', [])
            if contacts:
                print(f"\nüìä –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:")
                for i, contact in enumerate(contacts):
                    print(f"   {i+1}. {contact.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"      –ê–¥—Ä–µ—Å: {contact.get('address', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {contact.get('coordinates', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"      Email: {contact.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"      –°–∞–π—Ç: {contact.get('website', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print()
            else:
                print("   ‚ùå –ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
        return True
        
    except requests.exceptions.Timeout:
        print("   ‚è∞ Timeout - –∑–∞–ø—Ä–æ—Å –∑–∞–Ω—è–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è '–ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–µ–ª–µ–π'")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞
    if not test_health_endpoint():
        print("\n‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ:")
        print("   docker-compose up --build")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    test_locations = ["–°–æ—á–∏", "–ê–Ω–∞–ø–∞"]
    
    for location in test_locations:
        success = test_collect_contacts(location)
        if not success:
            print(f"   ‚ö†Ô∏è –¢–µ—Å—Ç –¥–ª—è {location} –Ω–µ –ø—Ä–æ—à–µ–ª")
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
        if location != test_locations[-1]:
            print("\n‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º...")
            time.sleep(5)
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
